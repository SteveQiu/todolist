"use strict";var ApplicationConfiguration=function(){var a="checklist",b=["ngResource","ngRoute","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","ui.sortable","btford.socket-io","mobile-angular-ui"],c=function(b,c){angular.module(b,c||[]),angular.module(a).requires.push(b)};return{applicationModuleName:a,applicationModuleVendorDependencies:b,registerModule:c}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function(a){a.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("checklists"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("logs"),ApplicationConfiguration.registerModule("teams"),ApplicationConfiguration.registerModule("templates"),ApplicationConfiguration.registerModule("users"),angular.module("checklists").run(["Menus",function(a){a.addMenuItem("topbar","Checklists","checklists","dropdown","/checklists(/create)?"),a.addSubMenuItem("topbar","checklists","List Checklists","checklists")}]),angular.module("checklists").config(["$stateProvider",function(a){a.state("listChecklists",{url:"/checklists",templateUrl:"modules/checklists/views/list-checklists.client.view.html"}).state("createChecklist",{url:"/checklists/create",templateUrl:"modules/checklists/views/create-checklist.client.view.html"}).state("instantiateChecklist",{url:"/checklists/create/:templateId",templateUrl:"modules/checklists/views/findTemplate.html"}).state("viewChecklist",{url:"/checklists/:checklistId",templateUrl:"modules/checklists/views/view-checklist.client.view.html"}).state("editChecklist",{url:"/checklists/:checklistId/edit",templateUrl:"modules/checklists/views/edit-checklist.client.view.html"})}]).run(["$rootScope","$location","Authentication",function(a,b,c){a.$on("$locationChangeStart",function(){""===c.user&&b.url().match("/checklists")&&b.path("/signin")})}]),angular.module("checklists").controller("ChecklistsController",["$scope","$stateParams","$location","$http","Socket","Authentication","Checklists","env",function(a,b,c,d,e,f,g){a.authentication=f,a.taskList=[],a.taskInput="",a.templateId=b.templateId,a.create=function(){var b=new g({name:this.name});b.$save(function(b){c.path("checklists/"+b._id),a.name=""},function(b){a.error=b.data.message})},a.remove=function(b){if(b){b.$remove();for(var d in a.checklists)a.checklists[d]===b&&a.checklists.splice(d,1)}else a.checklist.$remove(function(){c.path("checklists")})},a.update=function(b){var d=a.checklist;d.action=b.isDone?"completed task":"unchecked task",d.itemName=b.name,d.$update(function(){c.path("checklists/"+d._id)},function(b){a.error=b.data.message})},a.find=function(){a.checklists=g.query()},a.findOne=function(){a.checklist=g.get({checklistId:b.checklistId})},a.findTemplate=function(){d.get("/templates/"+a.templateId).success(function(b){a.template=b;var d=new g({name:a.template.name,taskList:a.template.taskList});a.checklist=d,d.$save(function(b){c.path("checklists/"+b._id),a.name=""},function(b){a.error=b.data.message})}).error(function(){alert("Template does not exist!")})},a.percentage=function(){var b=0;if(void 0!==a.checklist.taskList){for(var c=a.checklist.taskList.length-1;c>=0;c--)a.checklist.taskList[c].isDone===!0&&b++;return Math.round(100*b/a.checklist.taskList.length)}return 0},e.on("checklist.updated",function(b){for(var c=a.checklist.taskList.length-1;c>=0;c--)a.checklist.taskList[c].isDone=b.taskList[c].isDone})}]),angular.module("checklists").factory("Checklists",["$resource",function(a){return a("checklists/:checklistId",{checklistId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/"),a.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function(a,b,c){a.authentication=b,a.isCollapsed=!1,a.menu=c.getMenu("topbar"),a.toggleCollapsibleMenu=function(){a.isCollapsed=!a.isCollapsed},a.$on("$stateChangeSuccess",function(){a.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function(a,b){a.authentication=b,a.navTab=0,a.pageUrl="welcome.html",a.setTab=function(b){a.navTab=b},a.setPage=function(b){a.pageUrl=b}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var a=function(a){if(!a)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var b in a.roles)for(var c in this.roles)if(this.roles[c]===a.roles[b])return!0;return!1};this.validateMenuExistance=function(a){if(a&&a.length){if(this.menus[a])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(a){return this.validateMenuExistance(a),this.menus[a]},this.addMenu=function(b,c,d){return this.menus[b]={isPublic:c||!1,roles:d||this.defaultRoles,items:[],shouldRender:a},this.menus[b]},this.removeMenu=function(a){this.validateMenuExistance(a),delete this.menus[a]},this.addMenuItem=function(b,c,d,e,f,g,h,i){return this.validateMenuExistance(b),this.menus[b].items.push({title:c,link:d,menuItemType:e||"item",menuItemClass:e,uiRoute:f||"/"+d,isPublic:null===g||"undefined"==typeof g?this.menus[b].isPublic:g,roles:null===h||"undefined"==typeof h?this.menus[b].roles:h,position:i||0,items:[],shouldRender:a}),this.menus[b]},this.addSubMenuItem=function(b,c,d,e,f,g,h,i){this.validateMenuExistance(b);for(var j in this.menus[b].items)this.menus[b].items[j].link===c&&this.menus[b].items[j].items.push({title:d,link:e,uiRoute:f||"/"+e,isPublic:null===g||"undefined"==typeof g?this.menus[b].items[j].isPublic:g,roles:null===h||"undefined"==typeof h?this.menus[b].items[j].roles:h,position:i||0,shouldRender:a});return this.menus[b]},this.removeMenuItem=function(a,b){this.validateMenuExistance(a);for(var c in this.menus[a].items)this.menus[a].items[c].link===b&&this.menus[a].items.splice(c,1);return this.menus[a]},this.removeSubMenuItem=function(a,b){this.validateMenuExistance(a);for(var c in this.menus[a].items)for(var d in this.menus[a].items[c].items)this.menus[a].items[c].items[d].link===b&&this.menus[a].items[c].items.splice(d,1);return this.menus[a]},this.addMenu("topbar")}]),angular.module("core").factory("env",function(){return"{{=it.env}}"}).factory("host",function(){return"{{=it.host}}"}).factory("Socket",["socketFactory",function(a){return a({prefix:"",ioSocket:io.connect("/",{transports:["websocket"],secure:!0})})}]),angular.module("logs").config(["$stateProvider",function(a){a.state("listLogs",{url:"/logs",templateUrl:"modules/logs/views/newsfeed.html"})}]),angular.module("logs").controller("LogsController",["$scope","$stateParams","$location","Socket","Authentication","Logs",function(a,b,c,d,e,f){a.authentication=e,a.create=function(){var b=new f({name:this.name});b.$save(function(b){c.path("logs/"+b._id),a.name=""},function(b){a.error=b.data.message})},a.remove=function(b){if(b){b.$remove();for(var d in a.logs)a.logs[d]===b&&a.logs.splice(d,1)}else a.log.$remove(function(){c.path("logs")})},a.update=function(){var b=a.log;b.$update(function(){c.path("logs/"+b._id)},function(b){a.error=b.data.message})},a.find=function(){a.logs=f.query()},a.findOne=function(){a.log=f.get({logId:b.logId})},a.buildUrl=function(a){var b="#!/"+a.type+"s";return a.action.indexOf("deleted")>-1?b:b+"/"+a.document};var g=function(a,b){return a+': "'+b+'"'};a.buildString=function(a){var b=a.action,c=g(b,a.itemName);return b.indexOf("task")>-1&&(c+=" in "+a.type+': "'+a.documentName+'"'),c},d.on("log.updated",function(){a.logs=f.query()})}]),angular.module("logs").factory("Logs",["$resource",function(a){return a("logs/:logId",{logId:"@_id"},{update:{method:"PUT"}})}]),angular.module("teams").run(["Menus",function(a){a.addMenuItem("topbar","Teams","teams","dropdown","/teams(/create)?"),a.addSubMenuItem("topbar","teams","List Teams","teams"),a.addSubMenuItem("topbar","teams","New Team","teams/create")}]),angular.module("teams").config(["$stateProvider",function(a){a.state("listTeams",{url:"/teams",templateUrl:"modules/teams/views/list-teams.client.view.html"}).state("createTeam",{url:"/teams/create",templateUrl:"modules/teams/views/create-team.client.view.html"}).state("viewTeam",{url:"/teams/:teamId",templateUrl:"modules/teams/views/view-team.client.view.html"}).state("editTeam",{url:"/teams/:teamId/edit",templateUrl:"modules/teams/views/edit-team.client.view.html"})}]),angular.module("teams").controller("TeamsController",["$scope","$stateParams","$location","Authentication","Teams",function(a,b,c,d,e){a.authentication=d,a.memberList=[],a.memberInput="",a.create=function(){var b=new e({name:this.name,members:this.memberList});b.$save(function(b){c.path("teams/"+b._id),a.name=""},function(b){a.error=b.data.message})},a.addMember=function(b){if(""!==a.memberInput){var c={name:a.memberInput};b?b.push(c):a.memberList.push(c),a.memberInput=""}},a.memberListSortable={containment:"parent",cursor:"move",tolerance:"pointer"},a.deleteMember=function(a,b){b?b.splice(a,1):this.team.splice(a,1)},a.remove=function(b){if(b){b.$remove();for(var d in a.teams)a.teams[d]===b&&a.teams.splice(d,1)}else a.team.$remove(function(){c.path("teams")})},a.update=function(){var b=a.team;b.$update(function(){c.path("teams/"+b._id)},function(b){a.error=b.data.message})},a.find=function(){a.teams=e.query()},a.findOne=function(){a.team=e.get({teamId:b.teamId})},a.checkAccess=function(){return a.template.user._id===a.authentication.user._id}}]),angular.module("teams").factory("Teams",["$resource",function(a){return a("teams/:teamId",{teamId:"@_id"},{update:{method:"PUT"}})}]),angular.module("templates").run(["Menus",function(a){a.addMenuItem("topbar","Templates","templates","dropdown","/templates(/create)?"),a.addSubMenuItem("topbar","templates","List Templates","templates"),a.addSubMenuItem("topbar","templates","New Template","templates/create")}]),angular.module("templates").config(["$stateProvider",function(a){a.state("listTemplates",{url:"/templates",templateUrl:"modules/templates/views/list-templates.client.view.html"}).state("createTemplate",{url:"/templates/create",templateUrl:"modules/templates/views/create-template.client.view.html"}).state("viewTemplate",{url:"/templates/:templateId",templateUrl:"modules/templates/views/view-template.client.view.html"}).state("editTemplate",{url:"/templates/:templateId/edit",templateUrl:"modules/templates/views/edit-template.client.view.html"})}]).run(["$rootScope","$location","Authentication",function(a,b,c){a.$on("$locationChangeStart",function(){""===c.user&&b.url().match("/templates")&&b.path("/signin")})}]),angular.module("templates").controller("TemplatesController",["$scope","$stateParams","$location","Authentication","Templates",function(a,b,c,d,e){a.authentication=d,a.taskList=[],a.taskInput="",a.create=function(b){var d;d=new e(b?{name:b.name+" Copy",taskList:b.taskList}:{name:this.name,taskList:this.taskList}),d.$save(function(b){c.path("templates/"+b._id),a.name=""},function(b){a.error=b.data.message})},a.addTask=function(b){if(""!==a.taskInput){var c={name:a.taskInput,isDone:!1};b?b.push(c):a.taskList.push(c),a.taskInput="",a.template.action="created task",a.template.itemName=c.name}},a.taskListSortable={containment:"parent",cursor:"move",tolerance:"pointer"},a.deleteTask=function(b,c){c?(a.template.action="removed task",a.template.itemName=c[b].name,c.splice(b,1)):this.taskList.splice(b,1)},a.remove=function(b){if(b){b.$remove();for(var d in a.templates)a.templates[d]===b&&a.templates.splice(d,1)}else a.template.$remove(function(){c.path("templates")})},a.update=function(){var b=a.template;b.$update(function(){c.path("templates/"+b._id)},function(b){a.error=b.data.message})},a.find=function(){a.templates=e.query()},a.findOne=function(){a.template=e.get({templateId:b.templateId}),a.taskList=a.template.taskList},a.checkCreator=function(){return a.template.user._id===a.authentication.user._id}}]),angular.module("templates").factory("Templates",["$resource",function(a){return a("templates/:templateId",{templateId:"@_id"},{update:{method:"PUT"}})}]).directive("editInPlace",function(){return{restrict:"E",scope:{value:"="},template:'<span ng-click="edit()" ng-bind="value"></span><input ng-model="value"></input>',link:function(a,b){var c=angular.element(b.children()[1]);b.addClass("edit-in-place"),a.editing=!1,a.edit=function(){a.editing=!0,b.addClass("active"),c[0].focus()},c.on("blur",function(){a.editing=!1,b.removeClass("active")})}}}).directive("ngEnter",function(){return function(a,b,c){b.keyup(function(b){13===b.keyCode&&a.$apply(function(){a.$eval(c.ngEnter)})})}}),angular.module("users").config(["$httpProvider",function(a){a.interceptors.push(["$q","$location","Authentication",function(a,b,c){return{responseError:function(d){switch(d.status){case 401:c.user=null,b.path("signin");break;case 403:}return a.reject(d)}}}])}]),angular.module("users").config(["$stateProvider",function(a){a.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function(a,b,c,d){a.authentication=d,a.authentication.user&&c.path("/"),a.signup=function(){b.post("/auth/signup",a.credentials).success(function(b){a.authentication.user=b,c.path("/")}).error(function(b){a.error=b.message})},a.signin=function(){b.post("/auth/signin",a.credentials).success(function(b){a.authentication.user=b,c.path("/")}).error(function(b){a.error=b.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function(a,b,c,d,e){a.authentication=e,a.authentication.user&&d.path("/"),a.askForPasswordReset=function(){a.success=a.error=null,c.post("/auth/forgot",a.credentials).success(function(b){a.credentials=null,a.success=b.message}).error(function(b){a.credentials=null,a.error=b.message})},a.resetUserPassword=function(){a.success=a.error=null,c.post("/auth/reset/"+b.token,a.passwordDetails).success(function(b){a.passwordDetails=null,e.user=b,d.path("/password/reset/success")}).error(function(b){a.error=b.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function(a,b,c,d,e){a.user=e.user,a.user||c.path("/"),a.hasConnectedAdditionalSocialAccounts=function(){for(var b in a.user.additionalProvidersData)return!0;return!1},a.isConnectedSocialAccount=function(b){return a.user.provider===b||a.user.additionalProvidersData&&a.user.additionalProvidersData[b]},a.removeUserSocialAccount=function(c){a.success=a.error=null,b["delete"]("/users/accounts",{params:{provider:c}}).success(function(b){a.success=!0,a.user=e.user=b}).error(function(b){a.error=b.message})},a.updateUserProfile=function(b){if(b){a.success=a.error=null;var c=new d(a.user);c.$update(function(b){a.success=!0,e.user=b},function(b){a.error=b.data.message})}else a.submitted=!0},a.changeUserPassword=function(){a.success=a.error=null,b.post("/users/password",a.passwordDetails).success(function(){a.success=!0,a.passwordDetails=null}).error(function(b){a.error=b.message})}}]),angular.module("users").factory("Authentication",[function(){var a=this;return a._data={user:window.user},a._data}]),angular.module("users").factory("Users",["$resource",function(a){return a("users",{},{update:{method:"PUT"}})}]);